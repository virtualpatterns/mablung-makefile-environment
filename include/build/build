
ifndef filterEnvironmentReleaseContent
filterEnvironmentReleaseContent = $(1)
endif

filterReleaseContent =	$(call $\
													filterEnvironmentReleaseContent,$\
													$(1) $\
													$(patsubst $\
														%.js,$\
														%.cjs,$\
														$(patsubst $\
															$(projectPath)/release/esmodule%,$\
															$(projectPath)/release/commonjs%,$\
															$(filter-out $\
																%.make-folder $\
																%.build-folder,$\
																$(filter $\
																	$(projectPath)/release/esmodule%,$\
																	$(1))))))

include $(mablungMakefileEnvironmentPath)/node_modules/@virtualpatterns/mablung-makefile/include/build/build
	
ifneq ($(CURDIR),$(projectPath))

# $(info --------------------)
# $(info sourcePath = $(patsubst $(projectPath)/%,%,$(sourcePath)))
# $(info sourceContent = $(patsubst $(projectPath)/%,%,$(sourceContent)))
# $(info releaseContent = $(patsubst $(projectPath)/%,%,$(releaseContent)))
# $(info --------------------)

# Do not change this rule ... as it is it will replace the same rule in the included makefile
$(projectPath)/release/%.create-folder:
	@$(shx) mkdir -p $(patsubst %.create-folder,%,$@)
	$(if $\
		$(findstring /release/esmodule,$(patsubst %.create-folder,%,$@)),$\
		@$(shx) mkdir -p $(subst /release/esmodule,/release/commonjs,$(patsubst %.create-folder,%,$@)),$\
		@$(shx) echo -n)

# $(info $$(projectPath)/release/%.create-folder: in mablung-makefile-environment/include/build/build)
# @$(shx) echo create ... $(patsubst $(projectPath)/%,%,$(patsubst %.create-folder,%,$@))
# $(if $\
# 	$(findstring /release/esmodule,$(patsubst %.create-folder,%,$@)),$\
# 	@$(shx) echo create ... $(patsubst $(projectPath)/%,%,$(subst /release/esmodule,/release/commonjs,$(patsubst %.create-folder,%,$@))),$\
# 	@$(shx) echo -n)

$(projectPath)/release/%.cjs: babelFlag += --env-name commonjs
$(projectPath)/release/%.js: babelFlag += --env-name esmodule

$(projectPath)/release/commonjs/%.cjs: babelFlag := --env-name commonjs --source-maps
$(projectPath)/release/commonjs/%.cjs: $(projectPath)/source/esmodule/%.js
	@$(shx) echo create ... $(patsubst $(projectPath)/%,%,$@)
	@$(babel) $< --out-file $@ $(babelFlag)

$(projectPath)/release/commonjs/%: $(projectPath)/source/esmodule/%
	@$(shx) echo copy ..... $(patsubst $(projectPath)/%,%,$<)
	@$(shx) cp -R $< $@

ifeq ($(findstring /source/esmodule,$(CURDIR)),/source/esmodule)

# Do not change this rule ... as it is it will be executed after the same rule in the included makefile
copy-folder::
	@$(shx) echo copy ..... $(patsubst $(projectPath)/%,%,$(sourcePath))
	@$(shx) cp -R $(sourcePath) $(patsubst %/,%,$(dir $(subst /source/esmodule,/release/commonjs,$(sourcePath))))
	@$(shx) rm -f $(subst /source/esmodule,/release/commonjs,$(sourcePath))/makefile

# @$(shx) echo delete ... $(patsubst $(projectPath)/%,%,$(subst /source/esmodule,/release/commonjs,$(sourcePath))/makefile)

endif

endif
