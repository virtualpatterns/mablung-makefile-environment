
ifndef current-clean-folder

include $(mablung-makefile-path)/include/build

ifeq ($(findstring source/esmodule,$(current-build-folder)),source/esmodule)

build-commonjs-item = $(patsubst $\
												release/esmodule/%,$\
												release/commonjs/%,$\
												$(patsubst $\
													%.js,$\
													%.cjs,$\
													$(build-item)))

build:: $(build-commonjs-item)
	@:

# this rule replaces the same rule in the included makefile
release/%.create:
	$(if $(verbose),@echo create .... $(patsubst %.create,%,$@))
	@npx shx mkdir -p $(patsubst %.create,%,$@)
	$(if $(verbose),@echo create .... $(patsubst release/esmodule/%,release/commonjs/%,$(patsubst %.create,%,$@)))
	@npx shx mkdir -p $(patsubst release/esmodule/%,release/commonjs/%,$(patsubst %.create,%,$@))

release/commonjs/.DS_Store: source/esmodule/.DS_Store
	$(if $(verbose),@echo ignore .... $<)
release/commonjs/%/.DS_Store: source/esmodule/%/.DS_Store
	$(if $(verbose),@echo ignore .... $<)
release/commonjs/.babelrc.json: source/esmodule/.babelrc.json
	$(if $(verbose),@echo ignore .... $<)
release/commonjs/%/.babelrc.json: source/esmodule/%/.babelrc.json
	$(if $(verbose),@echo ignore .... $<)
release/commonjs/.eslintrc.json: source/esmodule/.eslintrc.json
	$(if $(verbose),@echo ignore .... $<)
release/commonjs/%/.eslintrc.json: source/esmodule/%/.eslintrc.json
	$(if $(verbose),@echo ignore .... $<)

release/commonjs/%.cjs: export NODE_ENV := commonjs
release/commonjs/%.cjs: source/esmodule/%.cjs
	@echo compile ... $@ $(babel-parameter)
	@npx babel $< --out-file $@ --source-maps true $(babel-parameter)

release/commonjs/%.cjs: export NODE_ENV := commonjs
release/commonjs/%.cjs: source/esmodule/%.js
	@echo compile ... $@ $(babel-parameter)
	@npx babel $< --out-file $@ --source-maps true $(babel-parameter)

release/commonjs/%: source/esmodule/%
	@echo copy ...... $@
	@npx shx cp -R $< $(call trim-folder-path,$@)

ifeq ($(findstring source/esmodule/,$(current-build-folder)),source/esmodule/)

# this rule is executed after the same rule in the included makefile
copy::
	$(if $(verbose),@echo copy ...... $(patsubst source/esmodule/%,release/commonjs/%,$(current-build-folder)))
	@npx shx rm -Rf $(patsubst source/esmodule/%,release/commonjs/%,$(current-build-folder))
	@npx shx cp -R $(current-build-folder) $(call trim-folder-path,$(patsubst source/esmodule/%,release/commonjs/%,$(current-build-folder)))
	$(if $(verbose),@echo delete .... $(patsubst source/esmodule/%,release/commonjs/%,$(current-build-folder))/makefile)
	@npx shx rm -f $(patsubst source/esmodule/%,release/commonjs/%,$(current-build-folder))/makefile

endif

else ifeq ($(current-build-folder),source)

release/esmodule.create:
	$(if $(verbose),@echo create .... $(patsubst %.create,%,$@))
	@npx shx mkdir -p $(patsubst %.create,%,$@)
	$(if $(verbose),@echo create .... $(subst release/esmodule,release/commonjs,$(patsubst %.create,%,$@)))
	@npx shx mkdir -p $(subst release/esmodule,release/commonjs,$(patsubst %.create,%,$@))

endif

release/%.cjs: export NODE_ENV := commonjs
release/%.js: export NODE_ENV := esmodule

endif
